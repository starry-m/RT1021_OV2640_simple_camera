/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef _PERIPHERALS_H_
#define _PERIPHERALS_H_

/***********************************************************************************************************************
 * Included files
 **********************************************************************************************************************/
#include "fsl_common.h"
#include "fsl_clock.h"
#include "fsl_lpspi.h"
#include "fsl_lpi2c.h"
#include "fsl_pwm.h"
#include "fsl_adapter_gpio.h"
#include "pin_mux.h"
#include "fsl_enc.h"
#include "fsl_adc.h"
#include "fsl_debug_console.h"

#if defined(__cplusplus)
extern "C" {
#endif /* __cplusplus */

/***********************************************************************************************************************
 * Definitions
 **********************************************************************************************************************/
/* Definitions for BOARD_InitPeripherals functional group */
/* BOARD_InitPeripherals defines for LPSPI4 */
/* Definition of peripheral ID */
#define LPSPI4_PERIPHERAL LPSPI4
/* Definition of clock source */
#define LPSPI4_CLOCK_FREQ 105600000UL
/* BOARD_InitPeripherals defines for LPSPI2 */
/* Definition of peripheral ID */
#define LPSPI2_PERIPHERAL LPSPI2
/* Definition of clock source */
#define LPSPI2_CLOCK_FREQ 105600000UL
/* BOARD_InitPeripherals defines for LPI2C1 */
/* Definition of peripheral ID */
#define LPI2C1_PERIPHERAL LPI2C1
/* Definition of clock source */
#define LPI2C1_CLOCK_FREQ 60000000UL
/* Definition of slave address */
#define LPI2C1_MASTER_SLAVE_ADDRESS 0
/* Definition of peripheral ID */
#define PWM2_PERIPHERAL PWM2
/* Definition of submodule 0 ID */
#define PWM2_SM0 kPWM_Module_0
/* Definition of clock source of submodule 0 frequency in Hertz */
#define PWM2_SM0_SM_CLK_SOURCE_FREQ_HZ 125000000U
/* Definition of submodule 0 counter clock source frequency in Hertz - PWM2_SM0_SM_CLK_SOURCE_FREQ_HZ divided by prescaler */
#define PWM2_SM0_COUNTER_CLK_SOURCE_FREQ_HZ 62500000U
/* Definition of submodule 0 counter (PWM) frequency in Hertz */
#define PWM2_SM0_COUNTER_FREQ_HZ 16001U
/* Definition of submodule 0 channel A ID */
#define PWM2_SM0_A kPWM_PwmA
/* Definition of submodule 0 channel B ID */
#define PWM2_SM0_B kPWM_PwmB
/* Definition of submodule 0 channel X ID */
#define PWM2_SM0_X kPWM_PwmX
/* Definition of fault Fault0 ID */
#define PWM2_F0_FAULT0 kPWM_Fault_0
/* Definition of fault Fault1 ID */
#define PWM2_F0_FAULT1 kPWM_Fault_1
/* Definition of fault Fault2 ID */
#define PWM2_F0_FAULT2 kPWM_Fault_2
/* Definition of fault Fault3 ID */
#define PWM2_F0_FAULT3 kPWM_Fault_3
/* gpio_io, 05 signal defines */
/* Definition of the pin direction */
#define BOARD_ENC_Buttion_PIN_DIRECTION kHAL_GpioDirectionIn
/* Definition of the pin level after initialization */
#define BOARD_ENC_Buttion_PIN_LEVEL 0U
/* gpio_io, 31 signal defines */
/* Definition of the pin direction */
#define BOARD_LCD_BLK_PIN_DIRECTION kHAL_GpioDirectionOut
/* Definition of the pin level after initialization */
#define BOARD_LCD_BLK_PIN_LEVEL 1U
/* Definition of peripheral ID */
#define ENC1_PERIPHERAL ENC1
/* BOARD_InitPeripherals defines for ADC1 */
/* Definition of peripheral ID */
#define ADC1_PERIPHERAL ADC1
/* Definition of special channel interconnected with ADC_ETC which takes real channel to be measured from ADC_ETC. */
#define ADC1_CHANNEL_DRIVEN_BY_ADC_ETC 16U
/* Channel 0 (IN.0) conversion control group. */
#define ADC1_CH0_CONTROL_GROUP 0U
/* Debug console is initialized in the peripheral tool */
#define BOARD_INIT_DEBUG_CONSOLE_PERIPHERAL 
/* Definition of serial peripheral instance */
#define DEBUGCONSOLE_INSTANCE 1U
/* Definition of serial peripheral type */
#define DEBUGCONSOLE_TYPE kSerialPort_Uart
/* Definition of the Baud rate */
#define DEBUGCONSOLE_BAUDRATE 115200UL
/* Definition of the clock source frequency */
#define DEBUGCONSOLE_CLK_FREQ 80000000UL

/***********************************************************************************************************************
 * Global variables
 **********************************************************************************************************************/
extern const lpspi_master_config_t LPSPI4_config;
extern const lpspi_master_config_t LPSPI2_config;
extern const lpi2c_master_config_t LPI2C1_masterConfig;
extern pwm_config_t PWM2_SM0_config;

extern pwm_signal_param_t PWM2_SM0_pwm_function_config[2];
extern const pwm_fault_input_filter_param_t PWM2_faultInputFilter_config;
extern const pwm_fault_param_t PWM2_Fault0_fault_config;
extern const pwm_fault_param_t PWM2_Fault1_fault_config;
extern const pwm_fault_param_t PWM2_Fault2_fault_config;
extern const pwm_fault_param_t PWM2_Fault3_fault_config;
extern GPIO_HANDLE_DEFINE(BOARD_ENC_Buttion_handle);
extern GPIO_HANDLE_DEFINE(BOARD_LCD_BLK_handle);
extern enc_config_t ENC1_config;
extern const adc_config_t ADC1_config;
extern const adc_channel_config_t ADC1_channels_config[1];

/***********************************************************************************************************************
 * Global functions
 **********************************************************************************************************************/
/* Get GPIO pin configuration */
hal_gpio_pin_config_t createAdapterGpioPinConfig(GPIO_Type *port, uint8_t pin, hal_gpio_direction_t direction, uint8_t level);

/***********************************************************************************************************************
 * Initialization functions
 **********************************************************************************************************************/

void BOARD_InitPeripherals(void);

/***********************************************************************************************************************
 * BOARD_InitBootPeripherals function
 **********************************************************************************************************************/
void BOARD_InitBootPeripherals(void);

#if defined(__cplusplus)
}
#endif

#endif /* _PERIPHERALS_H_ */
